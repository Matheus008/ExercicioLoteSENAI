package loteECamisetas.objeto;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Random;

public class Lote {

	private int numeroDoLote;
	private LocalDate dataDaFabricacao;
	private int quantidadeTotalDePecas;
	private ArrayList<Camisetas> listaDeCamisetas = new ArrayList<>();
	private boolean prontoParaEnvio = false;
	private boolean em = false;

	public Lote() {
	}

	public Lote(int quantidadeTotalDePecas) {
		this.numeroDoLote = gerarNumero();
		this.dataDaFabricacao = gerarDataDeFabricacao();
		this.quantidadeTotalDePecas = quantidadeTotalDePecas;
	}

	public int gerarNumero() {
		Random numeroAleatorio = new Random();
		return numeroAleatorio.nextInt(1000);
	}

	public LocalDate gerarDataDeFabricacao() {
		return LocalDate.now();
	}

	public void adicionarCamisas(int quantidade, char tamanho, String cor) {
		listaDeCamisetas.add(new Camisetas(tamanho, cor, quantidade));
	}

	public void prontoParaEnvio() {
		prontoParaEnvio = true;
	}
	
	public void () {
		em = true;
	}

	public void listarCamisas() {
		for(Camisetas camisetas : listaDeCamisetas) {
			System.out.println("Quantidade: "+camisetas.getQuantidade()
			+"\n Tamanho: "+camisetas.getTamanho()
			+"\n Cor: "+camisetas.getCor()
			+"\n --------------------------------------------------------");
		}
	}

	public int getQuantidadeTotalDePecas() {
		return quantidadeTotalDePecas;
	}

	public void setQuantidadeTotalDePecas(int quantidadeTotalDePecas) {
		this.quantidadeTotalDePecas = quantidadeTotalDePecas;
	}

	public int getNumeroDoLote() {
		return numeroDoLote;
	}

	public void setNumeroDoLote(int numeroDoLote) {
		this.numeroDoLote = numeroDoLote;
	}

	public boolean isProntoParaEnvio() {
		return prontoParaEnvio;
	}

	public void setProntoParaEnvio(boolean prontoParaEnvio) {
		this.prontoParaEnvio = prontoParaEnvio;
	}

	public boolean isEm() {
		return em;
	}

	public void setEm(boolean em) {
		this.em = em;
	}
	
	
}
